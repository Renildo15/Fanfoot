"""

Revision ID: 293db9b3eb6f
Revises: 39ffd265775e
Create Date: 2025-09-14 09:59:34.401078

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '293db9b3eb6f'
down_revision: Union[str, Sequence[str], None] = '39ffd265775e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coach',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('surname', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('style', sa.Enum('OFFENSIVE', 'DEFENSIVE', 'BALANCED', 'COUNTER_ATTACK', 'POSSESSION', 'PRESSING', name='coachstyle'), nullable=False),
    sa.Column('reputation', sa.Integer(), nullable=False),
    sa.Column('experience', sa.Integer(), nullable=False),
    sa.Column('salary_weekly', sa.Float(), nullable=False),
    sa.Column('contract_until', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('club_id', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('club_id')
    )
    with op.batch_alter_table('coach', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_coach_full_name'), ['full_name'], unique=False)

    op.create_table('coachhistory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('club_id', sa.Integer(), nullable=False),
    sa.Column('season_start', sa.Integer(), nullable=False),
    sa.Column('season_end', sa.Integer(), nullable=True),
    sa.Column('matches', sa.Integer(), nullable=False),
    sa.Column('wins', sa.Integer(), nullable=False),
    sa.Column('draws', sa.Integer(), nullable=False),
    sa.Column('losses', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['coach_id'], ['coach.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('club', schema=None) as batch_op:
        batch_op.add_column(sa.Column('stadium', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
        batch_op.add_column(sa.Column('coach', sqlmodel.sql.sqltypes.AutoString(), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('club', schema=None) as batch_op:
        batch_op.drop_column('coach')
        batch_op.drop_column('stadium')

    op.drop_table('coachhistory')
    with op.batch_alter_table('coach', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_coach_full_name'))

    op.drop_table('coach')
    # ### end Alembic commands ###
